name: Tractobots Release Workflow

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v2

      # Set up ROS Kinetic environment
      - name: Setup ROS Kinetic
        run: |
          sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
          curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | sudo apt-key add -
          sudo apt-get update
          sudo apt-get install -y ros-kinetic-desktop-full
          source /opt/ros/kinetic/setup.bash
          sudo apt-get install -y python-catkin-tools

      # Install required ROS packages
      - name: Install ROS Packages
        run: |
          sudo apt-get update
          sudo apt-get install -y ros-kinetic-mapviz ros-kinetic-mapviz-plugins ros-kinetic-tile-map ros-kinetic-robot-localization

      # Install Docker
      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io
          sudo systemctl start docker
          sudo systemctl enable docker

      # Set up MapProxy with Docker
      - name: Setup MapProxy Docker Container
        run: |
          mkdir ~/mapproxy
          sudo docker run -p 8080:8080 -d -t -v ~/mapproxy:/mapproxy danielsnider/mapproxy

      # Build the Tractobots project
      - name: Build Tractobots
        run: |
          git clone https://github.com/kylerlaird/tractobots.git
          cd tractobots
          catkin build
          source devel/setup.bash

      # Run Tests (if any)
      - name: Run Tests
        run: |
          cd tractobots
          # Add your test commands here
          echo "Running tests..."
          # Example: roslaunch tractobots_launchers test.launch (replace with actual test launch files)

  release:
    needs: build
    runs-on: ubuntu-20.04

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v2

      # Publish Release on GitHub
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            tractobots/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

